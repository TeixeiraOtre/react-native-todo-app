{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styled from \"styled-components\";\nimport AddInput from \"./components/AddInput\";\nimport TodoList from \"./components/TodoList\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport Empty from \"./components/Empty\";\nimport Header from \"./components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    \"poppins-regular\": require(\"./assets/fonts/Poppins/Poppins-Regular.ttf\"),\n    \"poppins-bold\": require(\"./assets/fonts/Poppins/Poppins-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var submitHandler = function submitHandler(value) {\n    setData(function (prevTodo) {\n      return [{\n        value: value,\n        key: Math.random().toString()\n      }].concat(_toConsumableArray(prevTodo));\n    });\n  };\n\n  var deleteItem = function deleteItem(key) {\n    setData(function (prevTodo) {\n      return prevTodo.filter(function (todo) {\n        return todo.key != key;\n      });\n    });\n  };\n\n  if (fontsLoaded) {\n    return _jsxs(ComponentContainer, {\n      children: [_jsx(View, {\n        children: _jsx(StatusBar, {\n          barStyle: \"light-content\",\n          backgroundColor: \"midnightblue\"\n        })\n      }), _jsxs(View, {\n        children: [_jsx(FlatList, {\n          data: data,\n          ListHeaderComponent: function ListHeaderComponent() {\n            return _jsx(Header, {});\n          },\n          ListEmptyComponent: function ListEmptyComponent() {\n            return _jsx(Empty, {});\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.key;\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(TodoList, {\n              item: item,\n              deleteItem: deleteItem\n            });\n          }\n        }), _jsx(View, {\n          children: _jsx(AddInput, {\n            submitHandler: submitHandler\n          })\n        })]\n      })]\n    });\n  } else {\n    return _jsx(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        setFontsLoaded(true);\n      },\n      onError: console.warn\n    });\n  }\n}\nvar ComponentContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: midnightblue;\\n  height: 100%;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n\"])));","map":{"version":3,"sources":["D:/PROJETOS/FACULDADE/react-native-todo-app/App.js"],"names":["React","useState","styled","AddInput","TodoList","Font","AppLoading","Empty","Header","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded","data","setData","submitHandler","value","prevTodo","key","Math","random","toString","deleteItem","filter","todo","item","console","warn","ComponentContainer","View"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SACfJ,IAAI,CAACK,SAAL,CAAe;AACb,uBAAmBC,OAAO,8CADb;AAEb,oBAAgBA,OAAO;AAFV,GAAf,CADe;AAAA,CAAjB;;AAMA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAsCX,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,cAApB;;AAEA,mBAAwBb,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BF,IAAAA,OAAO,CAAC,UAACG,QAAD,EAAc;AACpB,cACE;AACED,QAAAA,KAAK,EAAEA,KADT;AAEEE,QAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFP,OADF,4BAKKJ,QALL;AAOD,KARM,CAAP;AASD,GAVD;;AAYA,MAAMK,UAAU,GAAG,SAAbA,UAAa,CAACJ,GAAD,EAAS;AAC1BJ,IAAAA,OAAO,CAAC,UAACG,QAAD,EAAc;AACpB,aAAOA,QAAQ,CAACM,MAAT,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACN,GAAL,IAAYA,GAAtB;AAAA,OAAhB,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,MAAIP,WAAJ,EAAiB;AACf,WACE,MAAC,kBAAD;AAAA,iBACE,KAAC,IAAD;AAAA,kBACE,KAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,eAApB;AAAoC,UAAA,eAAe,EAAC;AAApD;AADF,QADF,EAKE,MAAC,IAAD;AAAA,mBACE,KAAC,QAAD;AACE,UAAA,IAAI,EAAEE,IADR;AAEE,UAAA,mBAAmB,EAAE;AAAA,mBAAM,KAAC,MAAD,KAAN;AAAA,WAFvB;AAGE,UAAA,kBAAkB,EAAE;AAAA,mBAAM,KAAC,KAAD,KAAN;AAAA,WAHtB;AAIE,UAAA,YAAY,EAAE,sBAACY,IAAD;AAAA,mBAAUA,IAAI,CAACP,GAAf;AAAA,WAJhB;AAKE,UAAA,UAAU,EAAE;AAAA,gBAAGO,IAAH,QAAGA,IAAH;AAAA,mBAAc,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEA,IAAhB;AAAsB,cAAA,UAAU,EAAEH;AAAlC,cAAd;AAAA;AALd,UADF,EAQE,KAAC,IAAD;AAAA,oBACE,KAAC,QAAD;AAAU,YAAA,aAAa,EAAEP;AAAzB;AADF,UARF;AAAA,QALF;AAAA,MADF;AAoBD,GArBD,MAqBO;AACL,WACE,KAAC,UAAD;AACE,MAAA,UAAU,EAAER,QADd;AAEE,MAAA,QAAQ,EAAE,oBAAM;AACdK,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAJH;AAKE,MAAA,OAAO,EAAEc,OAAO,CAACC;AALnB,MADF;AASD;AACF;AAED,IAAMC,kBAAkB,GAAG5B,MAAM,CAAC6B,IAAV,+MAAxB","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StatusBar, FlatList } from \"react-native\";\nimport styled from \"styled-components\";\nimport AddInput from \"./components/AddInput\";\nimport TodoList from \"./components/TodoList\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport Empty from \"./components/Empty\";\nimport Header from \"./components/Header\";\n\nconst getFonts = () =>\n  Font.loadAsync({\n    \"poppins-regular\": require(\"./assets/fonts/Poppins/Poppins-Regular.ttf\"),\n    \"poppins-bold\": require(\"./assets/fonts/Poppins/Poppins-Bold.ttf\"),\n  });\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  const [data, setData] = useState([]);\n\n  const submitHandler = (value) => {\n    setData((prevTodo) => {\n      return [\n        {\n          value: value,\n          key: Math.random().toString(),\n        },\n        ...prevTodo,\n      ];\n    });\n  };\n\n  const deleteItem = (key) => {\n    setData((prevTodo) => {\n      return prevTodo.filter((todo) => todo.key != key);\n    });\n  };\n\n  if (fontsLoaded) {\n    return (\n      <ComponentContainer>\n        <View>\n          <StatusBar barStyle=\"light-content\" backgroundColor=\"midnightblue\" />\n        </View>\n\n        <View>\n          <FlatList\n            data={data}\n            ListHeaderComponent={() => <Header />}\n            ListEmptyComponent={() => <Empty />}\n            keyExtractor={(item) => item.key}\n            renderItem={({ item }) => <TodoList item={item} deleteItem={deleteItem} />}\n          />\n          <View>\n            <AddInput submitHandler={submitHandler} />\n          </View>\n        </View>\n      </ComponentContainer>\n    );\n  } else {\n    return (\n      <AppLoading\n        startAsync={getFonts}\n        onFinish={() => {\n          setFontsLoaded(true);\n        }}\n        onError={console.warn}\n      />\n    );\n  }\n}\n\nconst ComponentContainer = styled.View`\n  background-color: midnightblue;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;"]},"metadata":{},"sourceType":"module"}